{>"layout/layout.dust"/}
{<content}
<style>
#assembly, #elements {
  display: inline-block;
  min-height: 50px;
  min-width: 100%;
  background-color: gray;
}

#assembly img, #elements img {
  width: 100%;
}

.remove, .add {
  display: none;
  top: 45%;
  left: 5px;
  position: absolute;
}

.glyphicon{
  position: absolute;
  background-color: white;
}

.glyphicon-remove {
  color: #d44950;
}

.glyphicon-ok, .glyphicon-plus {
  color: #4cae4c;
}

#assembly li{
  padding: 0px;
}

#assembly li:hover .remove {
  display: inline;
}

#elements li:hover .add {
  display: inline;
}

#tryagain {
  display: none;
}

</style>
<h3>{game.assemble_category}</h3>
<div class="row">
  <div class="col-sm-5">
    <h4 class="text-center elements">Bauteile</h2>
    <ul class="well list-group" id="elements">
    {#buildingparts}
      <li data-id="{_id}" class="list-group-item">
        <input type="hidden" name="sortings[]" value="{_id}">
        <img src="/ressources/image?id={image}&amp;size=large" title="{title}">
        <span class="pull-right remove glyphicon glyphicon-remove"></span>
        <span class="pull-right add glyphicon glyphicon-plus"></span>
    </li>
    {/buildingparts}
    </ul>
  </div>
  <div class="col-sm-5 col-sm-offset-2">
    <h4 class="text-center">Zusammensetzung</h2>
    <form id="assemblyform">
      <input type="hidden" name="gameid" value="{game._id}">
      <ol class="well list-group" id="assembly">
      </ol>
    </form>
  </div>
</div>

<div class="well" style="max-width:300px; margin: 0 auto 10px;">
  <p>
  <button id="submit"   type="button" style="width:49%" class="btn btn-primary">Bestätigen</button>
  <button id="tryagain" type="button" style="width:49%" class="btn btn-primary">Nochmal spielen</button>
  </p>
  <span id="triesLeft" class="badge pull-right"></span>
  <button id="newgame" type="button" style="display:none" class="btn btn-danger btn-block">Neues Spiel</button>
</div>

<!-- Modal -->
<div class="modal fade" id="checkModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title" id="myModalLabel"></h4>
      </div>
      <div class="modal-body">

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Schließen</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<script>
$(window).ready(function() {
  var max_tries = 3;
  var tries = 0;
  var isDaily = "{isDaily}true{:else}false{/isDaily}";

  /* sortable initialization*/
  $('#sortablebot, #sortabletop').disableSelection();

  $('#assembly, #elements').sortable({
    connectWith: ".list-group",
    scroll: true,
    start: function(e, ui) {
      ui.item.data('moved', true);
    }
  }).disableSelection();

  $('#assembly, #elements').on('click', 'li', function(e){
    var $this = $(this);
    if (!$this.data('moved')) {
      var to = $this.parent().is('#assembly') ? '#elements' : '#assembly';
      $this.prependTo(to);
      $("#assembly, #elements").sortable('refresh');
    }
    else {
      $(this).data('moved', false);
    }
    $('#submit').prop('disabled', false);
    return false;
  });

  /* onlick listener */

  $('#newgame').click(function(){
    location.reload();
    
    /* Reset submit btn for Firefox bug */
    $('#submit').prop('disabled', false);
  });

  /* try again btn */
  $('#tryagain').click(function(){
    removeCorrection();
    $('#assembly').sortable('enable');
    $('#assembly li').each( function(){
      $(this).prependTo('#elements');
    });
    $('#assembly').sortable('refresh');
    initBindings();
    $('#submit').prop('disabled', false);
    $('#tryagain').prop('disabled', true);
  });


  /* POST Request */
  $('#submit').click(function(){
    var $button = $(this);

    var serialized = $('#assemblyform').serialize().split("&").reverse().join("&");
    $.post('/games/assemble/check-sorting', serialized, function(data) {
      /* if error from server (i.e. wrong count of submitted elements)*/
      if(data.error) {
        /* show modal 'not enough elements'*/
        setModalText('Fehler', data.error);
      }else if(isDaily === "true"){
        /* return the result as array to the daily game */
        pushSolution(calcCorrection(data.order).join(','));
        return;
      }else {
        /* disable button, sortable and hover buttons*/
        $button.prop('disabled', true);
        $('#assembly').sortable('disable');
        $('#elements').sortable('disable');
        $('#elements li, #assembly li').off();

        tries++;

        /* mark wrong/right elements*/
        $('#tryagain').show();
        $('#tryagain').prop('disabled', false);
        showCorrection(data.order);

        if(data.correct){
          setModalText('Richtig!', 'Ihre Lösung ist korrekt!');
          showSolutionImage(data.solution);
          $('#tryagain').prop('disabled', true);
          $('#newgame').show();
          $('#newgame').prop('disabled', false);
        }else if(max_tries === tries){
          setModalText('Falsch!', 'Die Lösung wird aufgedeckt!');
          showSolutionImage(data.solution);
          $('#tryagain').prop('disabled', true);
          $('#newgame').show();
          $('#newgame').prop('disabled', false);
        }else{
          setModalText('Falsch!', 'Ihre Lösung ist leider falsch. Sie haben noch ' + (max_tries-tries) + ' Versuche!');
        }
      }
      $('#checkModal').modal();
    });
  });

  /* helper functions */

  function setModalText (title, body) {
    $('#checkModal .modal-title').text(title);
    $('#checkModal .modal-body').text(body);
  }

  /* for the daily game we create an array of true and false from the result */
  function calcCorrection(order) {
    var result = [];
    $('#assembly li').each(function(index, element){
      if (order[index]) {
        result.push(true);
      }else{
        result.push(false);
      }
    });
    return result;
  }

  function showCorrection(order) {
    $('#assembly li').each(function(index, element){
      /* remove hover buttons*/
      $('.remove, .add').hide();
      if (order[index]) {
        $(this).prepend('<span class="solution glyphicon glyphicon-ok"></span>');
      }
      else {
        $(this).prepend('<span class="solution glyphicon glyphicon-remove"></span>');
      }
    });
  }

  function showSolutionImage(img) {
    /* remove all unused elements in #elements*/
    $('#elements li').remove();
    /* change heading*/
    $('h2.elements').text('Lösungsbild');
    /* show solution image in #elements*/
    $('<img>').attr('src', '/ressources/image?id=' + img + '&size=large').appendTo($('#elements'));
    /* deactivate tryagain button, just in case*/
    $('#tryagain').prop('disabled', false);
  }

  function removeCorrection() {
    $('#assembly li').each(function(){
      $('.solution').remove();
      /* show hover buttons*/
      $('.remove, .add').removeAttr('style');
    });
  }

  $('#submit').prop('disabled', false);
});
</script>
{/content}
